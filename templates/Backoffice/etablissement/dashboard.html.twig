{% extends 'Backoffice/base.html.twig' %}

{% block title %}Tableau de bord de l'établissement{% endblock %}

{% block body %}
<div class="flex h-screen bg-gray-50">
    <!-- Sidebar -->
    <aside class="fixed inset-y-0 left-0 z-40 w-64 bg-white border-r border-gray-200 transform transition-transform duration-200 ease-in-out md:translate-x-0 -translate-x-full" id="sidebar">
        <div class="flex flex-col h-full">
            <!-- Sidebar Header -->
            <div class="flex items-center justify-center h-16 px-4 border-b border-gray-200 bg-gradient-to-r from-blue-600 to-blue-500">
                <span class="text-2xl font-bold text-white">Etablissement</span>
            </div>
            <!-- Sidebar Content -->
            <div class="flex-1 overflow-y-auto">
                <nav class="px-4 py-6 space-y-1">
                    <a href="{{ path('etablissement_dashboard') }}" class="flex items-center px-4 py-3 text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-blue-500 rounded-lg shadow">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                        </svg>
                        Tableau de bord
                    </a>
                    <a href="{{ path('etablissement_student_new') }}" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                        </svg>
                        Ajouter un étudiant
                    </a>
                    <a href="{{ path('etablissement_profile') }}" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-primary hover:bg-gray-100 rounded-lg">
    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M5.121 17.804A9 9 0 0112 15a9 9 0 016.879 2.804M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
    </svg>
    Mon Profil
</a>

                    <a href="{{ path('app_logout') }}" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200">
                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h6a2 2 0 012 2v1" />
                    </svg>
                    Se déconnecter
                </a>

                </nav>
            </div>
            <!-- Sidebar Footer -->
            <div class="p-4 border-t border-gray-200">
                <div class="flex items-center">
                    <div class="h-10 w-10 rounded-full bg-gradient-to-r from-blue-600 to-blue-500 text-white flex items-center justify-center shadow">
                        {{ app.user.nom|first|upper }}
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium text-gray-900">{{ app.user.nom }}</p>
                        <p class="text-xs text-gray-500">Administrateur</p>
                    </div>
                </div>
            </div>
        </div>
    </aside>

    <!-- Main Content -->
    <div class="flex-1 flex flex-col overflow-hidden md:ml-64">
        <!-- Top Navigation -->
        <header class="bg-white border-b border-gray-200 shadow-sm">
            <div class="flex items-center justify-between h-16 px-4">
                <!-- Mobile menu button -->
                <button id="sidebar-toggle" class="md:hidden text-gray-500 hover:text-gray-600 focus:outline-none">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                    </svg>
                </button>
                <!-- Search and user profile -->
                
            </div>
        </header>

        <!-- Main Content Area -->
        <main class="flex-1 overflow-y-auto p-4 sm:p-6 bg-gray-50">
            <!-- Flash Messages -->
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    <div class="mb-4 p-4 rounded-lg {% if label == 'success' %}bg-green-100 text-green-800 border border-green-200{% else %}bg-red-100 text-red-800 border border-red-200{% endif %}">
                        <div class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="{% if label == 'success' %}M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z{% else %}M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z{% endif %}"/>
                            </svg>
                            {{ message }}
                        </div>
                    </div>
                {% endfor %}
            {% endfor %}

            <!-- Page Header -->
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
                <div>
                    <h1 class="text-2xl font-bold text-gray-800">Aperçu du tableau de bord</h1>
                    <p class="text-sm text-gray-500 mt-1">Bienvenue, {{ app.user.nom }}. Voici ce qui se passe dans votre établissement.</p>
                </div>
                <div class="mt-4 md:mt-0 flex space-x-2">
                    <form id="export-pdf-form" action="{{ path('etablissement_dashboard') }}" method="post" class="inline">
                        <input type="hidden" name="export_type" value="pdf">
                        <button type="submit" class="inline-flex items-center text-gray-700 bg-white hover:bg-gray-100 font-medium rounded-lg text-sm px-4 py-2.5 border border-gray-300 shadow-sm">
                            <svg class="w-5 h-5 mr-2 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
                            </svg>
                            PDF
                        </button>
                    </form>
                    <form id="export-csv-form" action="{{ path('etablissement_dashboard') }}" method="post" class="inline">
                        <input type="hidden" name="export_type" value="csv">
                        <button type="submit" class="inline-flex items-center text-gray-700 bg-white hover:bg-gray-100 font-medium rounded-lg text-sm px-4 py-2.5 border border-gray-300 shadow-sm">
                            <svg class="w-5 h-5 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                            </svg>
                            CSV
                        </button>
                    </form>
                    <a href="{{ path('etablissement_student_new') }}" class="inline-flex items-center text-white bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 font-medium rounded-lg text-sm px-5 py-2.5 shadow-md transition-all duration-200">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                        </svg>
                        Ajouter un étudiant
                    </a>
                </div>
            </div>

            <!-- Stats Cards -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                <div class="bg-white rounded-xl shadow-sm p-6 hover:shadow-md transition-all duration-200 border-l-4 border-blue-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500">Total des étudiants</p>
                            <p class="text-2xl font-bold text-gray-900 mt-1">{{ stats.totalStudents|default(0) }}</p>
                        </div>
                        <div class="p-3 bg-blue-50 rounded-lg">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/>
                            </svg>
                        </div>
                    </div>
                    <div class="mt-4">
                        <span class="inline-flex items-center text-sm font-medium text-green-600">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
                            </svg>
                            12% par rapport au mois dernier
                        </span>
                    </div>
                </div>
                <!-- Other stats cards (unchanged) -->
            </div>

            <!-- Search and Add Student -->
<div class="bg-white rounded-xl shadow-sm p-6 mb-6">
    <div class="flex flex-col gap-6">
        <!-- Search Form -->
        <form action="{{ path('etablissement_dashboard') }}" method="get">
            <div class="flex flex-col md:flex-row gap-4">
                <div class="flex-grow">
                    <label for="search" class="sr-only">Chercher des étudiants</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <input type="text" name="search" id="search" value="{{ search }}" class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-150 ease-in-out" placeholder="Chercher des étudiants...">
                    </div>
                </div>
                <button type="submit" class="w-full md:w-auto inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200">
                    Chercher
                </button>
            </div>
        </form>
        <!-- Import XML Form -->
        <form action="{{ path('etablissement_import_students') }}" method="post" enctype="multipart/form-data">
            <div class="flex flex-col md:flex-row gap-4">
                <div class="flex-grow">
                    <label for="xml_file" class="block text-sm font-medium text-gray-700">Importer des étudiants (XML)</label>
                    <input type="file" name="xml_file" id="xml_file" accept=".xml" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:ring-blue-500 focus:border-blue-500" required>
                </div>
                <button type="submit" class="w-full md:w-auto inline-flex justify-center items-center px-4 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-all duration-200">
                    Importer
                </button>
                <input type="hidden" name="_token" value="{{ csrf_token('import_students') }}">
            </div>
        </form>

        <!-- Import CSV Form -->
        <form action="{{ path('etablissement_import_students_csv') }}" method="post" enctype="multipart/form-data">
            <div class="flex flex-col md:flex-row gap-4">
                <div class="flex-grow">
                    <label for="csv_file" class="block text-sm font-medium text-gray-700">Importer des étudiants (CSV)</label>
                    <input type="file" name="csv_file" id="csv_file" accept=".csv" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:ring-blue-500 focus:border-blue-500" required>
                </div>
                <button type="submit" class="w-full md:w-auto inline-flex justify-center items-center px-4 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-all duration-200">
                    Importer
                </button>
                <input type="hidden" name="_token" value="{{ csrf_token('import_students_csv') }}">
            </div>
        </form>
    </div>
</div>

            <!-- Student Table -->
            <div class="bg-white rounded-xl shadow-sm overflow-hidden mb-6">
                <div class="px-6 py-4 border-b border-gray-200 flex flex-col md:flex-row justify-between items-start md:items-center">
                    <h3 class="text-lg font-semibold text-gray-900">
                        Etudiants enregistrés
                        <span class="text-sm text-gray-500 ml-2">({{ total }} total)</span>
                    </h3>
                    <div class="mt-2 md:mt-0 flex space-x-2">
                        <div class="relative inline-block text-left">
                            <button type="button" class="inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200" id="menu-button" aria-expanded="false" aria-haspopup="true">
                                <svg class="-ml-0.5 mr-2 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"/>
                                </svg>
                                Actions
                            </button>
                            <div class="hidden origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1" id="dropdown-menu">
                                <div class="py-1" role="none">
                                    <form action="{{ path('etablissement_dashboard') }}" method="post">
                                        <input type="hidden" name="export_type" value="pdf">
                                        <button type="submit" class="text-gray-700 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 transition-colors duration-200" role="menuitem" tabindex="-1">Export as PDF</button>
                                    </form>
                                    <form action="{{ path('etablissement_dashboard') }}" method="post">
                                        <input type="hidden" name="export_type" value="csv">
                                        <button type="submit" class="text-gray-700 block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 transition-colors duration-200" role="menuitem" tabindex="-1">Export as CSV</button>
                                    </form>
                                    <a href="javascript:window.print()" class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100 transition-colors duration-200" role="menuitem" tabindex="-1">Print</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date de naissance</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Student #</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CIN</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Section</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Score</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Niveau</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <a href="{{ path('etablissement_export_students_csv', {id: etablissement.id}) }}"
   class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none">
    ⬇️ Export CSV
</a>
                        <tbody class="bg-white divide-y divide-gray-200">
                            {% for student in students %}
                                <tr class="hover:bg-gray-50 transition-colors duration-150">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="flex-shrink-0 h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center">
                                                <span class="text-blue-600 text-sm font-medium">{{ student.nom|first|upper }}</span>
                                            </div>
                                            <div class="ml-4">
                                                <div class="text-sm font-medium text-gray-900">{{ student.nom }} {{ student.prenom }}</div>
                                                <div class="text-sm text-gray-500">{{ student.email }}</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.email }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.dateNaissance|date('Y-m-d') }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.numeroEtudiant }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.numCin }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.section }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full {% if student.score >= 15 %}bg-green-100 text-green-800{% elseif student.score >= 10 %}bg-yellow-100 text-yellow-800{% else %}bg-red-100 text-red-800{% endif %}">
                                            {{ student.score|default('N/A') }}
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ student.niveau }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex items-center space-x-4">
                                            <a href="{{ path('etablissement_student_edit', {'id': student.id}) }}" class="text-blue-600 hover:text-blue-900 flex items-center group">
                                                <svg class="w-4 h-4 mr-1 group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"/>
                                                </svg>
                                                Edit
                                            </a>
                                            <form action="{{ path('etablissement_student_delete', {'id': student.id}) }}" method="post" onsubmit="return confirm('Are you sure you want to delete this student?');">
                                                <button type="submit" class="text-red-600 hover:text-red-900 flex items-center group">
                                                    <svg class="w-4 h-4 mr-1 group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                                    </svg>
                                                    Delete
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="9" class="px-6 py-4 text-center text-sm text-gray-500">No students found.</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
                <!-- Pagination -->
                <div class="px-6 py-4 border-t border-gray-200 bg-gray-50">
                    <nav class="flex items-center justify-between">
                        <div class="flex-1 flex justify-between items-center">
                            <div>
                                <p class="text-sm text-gray-700">
                                    Showing <span class="font-medium">{{ (page - 1) * limit + 1 }}</span> to <span class="font-medium">{{ min((page - 1) * limit + limit, total) }}</span> of <span class="font-medium">{{ total }}</span> results
                                </p>
                            </div>
                            <div>
                                <ul class="inline-flex -space-x-px">
                                    <li>
                                        {% if page > 1 %}
                                            <a href="{{ path('etablissement_dashboard', {'page': page - 1, 'search': search}) }}" class="px-3 py-2 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 transition-colors duration-200">
                                                Previous
                                            </a>
                                        {% else %}
                                            <span class="px-3 py-2 ml-0 leading-tight text-gray-400 bg-gray-100 border border-gray-300 rounded-l-lg">Previous</span>
                                        {% endif %}
                                    </li>
                                    <li>
                                        {% if (page * limit) < total %}
                                            <a href="{{ path('etablissement_dashboard', {'page': page + 1, 'search': search}) }}" class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 transition-colors duration-200">
                                                Next
                                            </a>
                                        {% else %}
                                            <span class="px-3 py-2 leading-tight text-gray-400 bg-gray-100 border border-gray-300 rounded-r-lg">Next</span>
                                        {% endif %}
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </nav>
                </div>
            </div>

 <!-- Stats Cards -->
<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
    <div class="bg-white rounded-xl shadow-sm p-6 hover:shadow-md transition-all duration-200 border-l-4 border-blue-500">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-500">Total des étudiants</p>
                <p class="text-2xl font-bold text-gray-900 mt-1">{{ stats.totalStudents|default(0) }}</p>
            </div>
            <div class="p-3 bg-blue-50 rounded-lg">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/>
                </svg>
            </div>
        </div>
        <div class="mt-4">
            <span class="inline-flex items-center text-sm font-medium text-green-600">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
                </svg>
                12% par rapport au mois dernier
            </span>
        </div>
    </div>
    <div class="bg-white rounded-xl shadow-sm p-6 hover:shadow-md transition-all duration-200 border-l-4 border-green-500">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-500">Score moyenne</p>
                <p class="text-2xl font-bold text-gray-900 mt-1">{{ stats.averageScore|default(0)|round(2) }}</p>
            </div>
            <div class="p-3 bg-green-50 rounded-lg">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 012-2h2a2 2 0 012 2v12a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                </svg>
            </div>
        </div>
        <div class="mt-4">
            <span class="inline-flex items-center text-sm font-medium text-green-600">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
                </svg>
                Stable performance
            </span>
        </div>
    </div>
    <div class="bg-white rounded-xl shadow-sm p-6 hover:shadow-md transition-all duration-200 border-l-4 border-yellow-500">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-500">Etablissements Publiques</p>
                <p class="text-2xl font-bold text-gray-900 mt-1">{{ stats.publicEtablissements|default(0) }}</p>
            </div>
            <div class="p-3 bg-yellow-50 rounded-lg">
                <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a2 2 0 012-2h2a2 2 0 012 2v5m-4 0h4"/>
                </svg>
            </div>
        </div>
    </div>
    <div class="bg-white rounded-xl shadow-sm p-6 hover:shadow-md transition-all duration-200 border-l-4 border-red-500">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray kontrakt-500">Etablissements Privés</p>
                <p class="text-2xl font-bold text-gray-900 mt-1">{{ stats.privateEtablissements|default(0) }}</p>
            </div>
            <div class="p-3 bg-red-50 rounded-lg">
                <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a2 2 0 012-2h2a2 2 0 012 2v5m-4 0h4"/>
                </svg>
            </div>
        </div>
    </div>
</div>

<!-- Charts Section -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
    <!-- Etablissement Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Etudiants par établissement</h3>
        <div class="relative h-64">
            <canvas id="etablissementChart"></canvas>
        </div>
    </div>
    <!-- Age Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Répartition par âge</h3>
        <div class="relative h-64">
            <canvas id="ageChart"></canvas>
        </div>
    </div>
    <!-- Score Distribution Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Répartition des scores</h3>
        <div class="relative h-64">
            <canvas id="scoreChart"></canvas>
        </div>
    </div>
    <!-- Section Enrollment Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Répartition par section</h3>
        <div class="relative h-64">
            <canvas id="sectionChart"></canvas>
        </div>
    </div>
</div>
        </main>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Register Chart.js plugin
        Chart.register(ChartDataLabels);

        // Sidebar toggle for mobile
        document.getElementById('sidebar-toggle').addEventListener('click', function() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('-translate-x-full');
        });

        // Charts initialization

        // Etablissement Chart
        const etablissementCtx = document.getElementById('etablissementChart').getContext('2d');
        new Chart(etablissementCtx, {
            type: 'bar',
            data: {
                labels: [{{ chartData.etablissement_data|map(d => '"' ~ d.nom|escape('js') ~ '"')|join(', ')|raw }}],
                datasets: [{
                    label: 'Students per Etablissement',
                    data: [{{ chartData.etablissement_data|map(d => d.count)|join(', ') }}],
                    backgroundColor: 'rgba(59, 130, 246, 0.7)',
                    borderColor: 'rgba(59, 130, 246, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { 
                        beginAtZero: true, 
                        ticks: { stepSize: 1 },
                        grid: { color: "rgba(229, 231, 235, 1)" }
                    },
                    x: { grid: { display: false } }
                },
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleFont: { size: 14 },
                        bodyFont: { size: 12 },
                        padding: 12,
                        usePointStyle: true
                    },
                    annotation: {
                        annotations: {
                            total: {
                                type: 'label',
                                content: 'Total: {{ stats.totalStudents|default(0) }}',
                                position: 'top',
                                xAdjust: -100,
                                font: { size: 12 },
                                backgroundColor: 'rgba(255, 255, 255, 0.8)',
                                borderColor: 'rgba(59, 130, 246, 1)',
                                borderWidth: 1,
                                padding: 6
                            },
                            average: {
                                type: 'label',
                                content: 'Avg: {{ stats.averageStudents|default(0) }}',
                                position: 'top',
                                xAdjust: 100,
                                font: { size: 12 },
                                backgroundColor: 'rgba(255, 255, 255, 0.8)',
                                borderColor: 'rgba(59, 130, 246, 1)',
                                borderWidth: 1,
                                padding: 6
                            }
                        }
                    }
                }
            }
        });

        // Age Chart
        const ageTotal = {{ stats.totalStudents|default(0) }};
        const ageCtx = document.getElementById('ageChart').getContext('2d');
        new Chart(ageCtx, {
            type: 'doughnut',
            data: {
                labels: [{{ chartData.age_data|map(d => '"' ~ d.range|escape('js') ~ '"')|join(', ')|raw }}],
                datasets: [{
                    data: [{{ chartData.age_data|map(d => d.count)|join(', ') }}],
                    backgroundColor: [
                        'rgba(59, 130, 246, 0.7)',
                        'rgba(239, 68, 68, 0.7)',
                        'rgba(16, 185, 129, 0.7)',
                        'rgba(168, 85, 247, 0.7)',
                        'rgba(245, 158, 11, 0.7)'
                    ],
                    borderColor: [
                        'rgba(59, 130, 246, 1)',
                        'rgba(239, 68, 68, 1)',
                        'rgba(16, 185, 129, 1)',
                        'rgba(168, 85, 247, 1)',
                        'rgba(245, 158, 11, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { 
                        position: 'bottom',
                        labels: { usePointStyle: true, padding: 20 }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleFont: { size: 14 },
                        bodyFont: { size: 12 },
                        padding: 12,
                        usePointStyle: true
                    },
                    datalabels: {
                        formatter: (value, context) => {
                            const percentage = ageTotal ? ((value / ageTotal) * 100).toFixed(1) + '%' : '0%';
                            return percentage;
                        },
                        color: '#fff',
                        font: { weight: 'bold', size: 12 },
                        padding: 6,
                        backgroundColor: 'rgba(0, 0, 0, 0.5)',
                        borderRadius: 4
                    }
                },
                cutout: '70%'
            }
        });

        // Score Distribution Chart
        const scoreCtx = document.getElementById('scoreChart').getContext('2d');
        new Chart(scoreCtx, {
            type: 'bar',
            data: {
                labels: [{{ chartData.score_data|map(d => '"' ~ d.range|escape('js') ~ '"')|join(', ')|raw }}],
                datasets: [{
                    label: 'Students by Score Range',
                    data: [{{ chartData.score_data|map(d => d.count)|join(', ') }}],
                    backgroundColor: 'rgba(16, 185, 129, 0.7)',
                    borderColor: 'rgba(16, 185, 129, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { 
                        beginAtZero: true, 
                        ticks: { stepSize: 1 },
                        grid: { color: "rgba(229, 231, 235, 1)" }
                    },
                    x: { grid: { display: false } }
                },
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleFont: { size: 14 },
                        bodyFont: { size: 12 },
                        padding: 12,
                        usePointStyle: true
                    },
                    datalabels: {
                        anchor: 'end',
                        align: 'top',
                        formatter: (value) => value,
                        font: { weight: 'bold', size: 12 },
                        color: '#000'
                    },
                    annotation: {
                        annotations: {
                            average: {
                                type: 'label',
                                content: 'Avg Score: {{ stats.averageScore|default(0)|round(2) }}',
                                position: 'top',
                                xAdjust: 0,
                                font: { size: 12 },
                                backgroundColor: 'rgba(255, 255, 255, 0.8)',
                                borderColor: 'rgba(16, 185, 129, 1)',
                                borderWidth: 1,
                                padding: 6
                            }
                        }
                    }
                }
            }
        });

        // Section Enrollment Chart
        const sectionCtx = document.getElementById('sectionChart').getContext('2d');
        new Chart(sectionCtx, {
            type: 'pie',
            data: {
                labels: [{{ chartData.section_data|map(d => '"' ~ d.section|escape('js') ~ '"')|join(', ')|raw }}],
                datasets: [{
                    data: [{{ chartData.section_data|map(d => d.count)|join(', ') }}],
                    backgroundColor: [
                        'rgba(59, 130, 246, 0.7)',
                        'rgba(239, 68, 68, 0.7)',
                        'rgba(16, 185, 129, 0.7)',
                        'rgba(168, 85, 247, 0.7)',
                        'rgba(245, 158, 11, 0.7)'
                    ],
                    borderColor: [
                        'rgba(59, 130, 246, 1)',
                        'rgba(239, 68, 68, 1)',
                        'rgba(16, 185, 129, 1)',
                        'rgba(168, 85, 247, 1)',
                        'rgba(245, 158, 11, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { 
                        position: 'bottom',
                        labels: { usePointStyle: true, padding: 20 }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleFont: { size: 14 },
                        bodyFont: { size: 12 },
                        padding: 12,
                        usePointStyle: true
                    },
                    datalabels: {
                        formatter: (value, context) => {
                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                            const percentage = total ? ((value / total) * 100).toFixed(1) + '%' : '0%';
                            return percentage;
                        },
                        color: '#fff',
                        font: { weight: 'bold', size: 12 },
                        padding: 6,
                        backgroundColor: 'rgba(0, 0, 0, 0.5)',
                        borderRadius: 4
                    }
                }
            }
        });
    });
</script>
{% endblock %}
